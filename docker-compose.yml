services:
  redis: 
    image: redis 
    ports:
      - 6379:6379
    volumes:
      - ./docker-dev-volumes/redis_data:/root/redis
      - ./docker-dev-volumes/redis_data/redis.conf:/usr/local/etc/redis/redis.conf
  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioBRIN # Ganti sesuai kebutuhan
      MINIO_ROOT_PASSWORD: minioBRIN # Ganti sesuai kebutuhan
    ports:
      - "9000:9000" # Port API MinIO
      - "9001:9001" # Port Konsol Admin
    volumes:
      - ./docker-dev-volumes/minio_data:/data # Volume untuk menyimpan data
      - ./docker-dev-volumes/minio_config:/root/.minio # Volume untuk menyimpan konfigurasi
    command: server /data --console-address ":9001"
  db:
    ports:
      - 5432:5432
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    volumes:
      - ./docker-dev-volumes/pg_data:/var/lib/postgresql/data  # Persist PostgreSQL data
  
  frontend:
    build: 
      context: .
      dockerfile: Dockerfile-frontend
    ports:
      - 80:3000
    tty: true
    volumes:
      - ./frontendx:/app
    environment:
      - NODE_ENV=development 
      - WATCHPACK_POLLING=true
    #command: "yarn dev"
  frontend2:
      build: 
        context: .
        dockerfile: Dockerfile-frontend2
      ports:
        - 82:3000
      tty: true
      volumes:
        - ./frontend2:/app
      environment:
        - NODE_ENV=development 
        - WATCHPACK_POLLING=true
      #command: "yarn dev"  
  fs :  
    tty: true
    build : 
      context : .
      dockerfile : Dockerfile-fs
    ports :     
        - 85:80
    volumes:
      - ./fs:/var/www:cached
      - ./fs/public:/var/www/html:cached